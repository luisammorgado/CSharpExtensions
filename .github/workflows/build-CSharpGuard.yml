# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build CSharp.Guard

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: web-api
  AZURE_WEBAPP_PACKAGE_PATH: './publish'
  DOTNET_VERSION: '8.0.x'
  PROJECT: 'CSharp.Guard/CSharp.Guard.csproj'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - uses: actions/checkout@v4           
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Setup .NET    
      uses: actions/setup-dotnet@v4
      
    - name: Restore dependencies
      run: dotnet restore
                 
    - name: Build
      run: dotnet build ${{ env.PROJECT }} --configuration Debug --no-restore

    - name: DotNet Bump Versions
      uses: SiqiLu/dotnet-bump-version@2.0.0
      with:
        version_files: ${{ env.PROJECT }}
        version_mask: 0.0.1.0
        version_overwrite: "*.*.*.*"
        github_token: ${{ secrets.GIT_TOKEN }}
        
    - name: Pack
      run: dotnet pack ${{ env.PROJECT }} -c Debug --no-restore --no-build
      
    - name: Push to NuGet
      ## oy2denvbjvpyobvxnmeauqdcwmcw7ave3oc3xddlwo5dsu
      run: dotnet nuget push **.nupkg --skip-duplicate -s https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_API_KEY}}
